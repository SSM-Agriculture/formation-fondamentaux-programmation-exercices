---
title: "Formation au Ministère de l'Agriculture"
subtitle: "Exercices pour les fondamentaux de la programmation"
date: today
date-format: "DD/MM/YYYY"
author: "SSP/DEMESIS"
description: |
  Support de formation les fondamentaux de la programmation (exercices)
slide-tone: false # for blind readers
chalkboard: false # press the B key to toggle chalkboard
transition: slide
fig-cap-location: bottom
toc: true
toc-title: Sommaire
toc-depth: 1
toc-float: true
# multiplex: true
execute:
  echo: false
  warning: false
  cache: false
editor:
  render-on-save: true
  markdown: 
    wrap: 72
---

## Exercice 1


![](img/exercice1.png){fig-align="center"}


## Exercice 1 - correction

::: columns
::: {.column width="30%"}
**ALGORITHME** Parcours-1  

**DEBUT**  
    Tourner à droite  
    Tourner à droite  
    Avancer d’une case  
    Tourner à droite  
    Tourner à droite  
    Tourner à droite  
    Avancer d’une case  
    Avancer d’une case	  
**FIN**
:::

::: {.column width="70%"}
![](img/exercice1_corrige.png){fig-align="center"}
:::
:::

## Exercice 2

::: columns
::: {.column width="70%"}
**Ecrire un algorithme Parcours-2**  

**Finalité :** permettre à la flèche d’atteindre la sortie du labyrinthe  


**Instructions disponibles :**  
- Avancer d’une case  
- Avancer de 2 cases  
- Tourner à gauche (= rotation de 90° vers la gauche)  
- Tourner à droite (= rotation de 90° vers la droite)  
- Faire un demi-tour (= rotation de 180°)  
:::

::: {.column width="30%"}
![](img/exercice2.png){fig-align="center"}
:::
:::

## Exercice 2 - correction

::: columns
::: {.column width="25%"}
**ALGORITHME Parcours-2**  

**DEBUT**  
    Faire un demi-tour  
    Avancer d’une case  
    Tourner à gauche  
    Avancer de 2 cases	  
**FIN**
:::

::: {.column width="75%"}
![](img/exercice2_corrige.png){fig-align="center"}
:::
:::

Cette solution correspond à celle optimisée par rapport au nombre d’instructions.  
Plusieurs variantes sont possibles y compris le bloc d’instructions de l’algorithme Parcours-1.

## Exercice 3

**Trouver l’erreur et corriger Parcours-3**  

::: columns
::: {.column width="50%"}
**ALGORITHME Parcours-3**  

**DEBUT**  
    Avancer d’une case  
    Tourner à gauche  
    Avancer d’une case  
    Tourner à droite  
    Tourner à droite  
    Avancer d’une case	  
**FIN**
:::

::: {.column width="50%"}
![](img/exercice3.png){fig-align="center"}
:::
:::

## Exercice 3 - correction

::: columns
::: {.column width="50%"}
**ALGORITHME Parcours-3**  

**DEBUT**  
    Avancer d’une case  
    Tourner à gauche  
    Avancer d’une case  
    Tourner à droite  
    [Avancer d'une case]{.blue}  
    Tourner à droite  
    Avancer d’une case	  
**FIN**
:::

::: {.column width="50%"}
![](img/exercice3.png){fig-align="center"}
:::
:::

## Exercice 4

**Compléter l’algorithme Parcours-4**  

**Finalités :**  
- Permettre à la flèche d’atteindre la sortie du labyrinthe  
- Connaître le nombre de points rouges et de points verts rencontrés sur le parcours  

**Noms des variables choisi pour l’exercice :** NbRouges et NbVerts 
  
::: columns
::: {.column width="50%"}
**ALGORITHME Parcours-4**  
		
**DEBUT**   
    Avancer d’une case  
    Tourner à gauche  
    Avancer d’une case  
    Tourner à droite  
    Avancer d’une case  
    Tourner à droite  
    Avancer d’une case	  
**FIN**
:::

::: {.column width="50%"}
![](img/exercice4.png){fig-align="center"}
:::
:::


## Exercice 4 - correction


::: columns
::: {.column width="30%"}
**ALGORITHME Parcours-4**  

[**VARIABLES**]{.blue}  
    [NbRouges : ENTIER]{.blue}  
    [NbVerts : ENTIER]{.blue}  
  		
**DEBUT**    
    [NbRouges <- 0]{.blue}  
    [NbVerts <- 0]{.blue}  
    Avancer d’une case  
    [NbRouges <- NbRouges + 2]{.blue}  
    [NbVerts <- NbVerts + 1]{.blue}  
    Tourner à gauche  
    Avancer d’une case  
    [NbVerts <- NbVerts + 1]{.blue}  
    Tourner à droite  
:::

::: {.column width="20%"}
**SUITE**  
    Avancer d’une case  
    [NbVerts <- NbVerts + 2]{.blue}  
    [NbRouges <- NbRouges + 1]{.blue}  
    Tourner à droite  
    Avancer d’une case	  
**FIN**
:::

::: {.column width="50%"}
![](img/exercice4_corrige.png){fig-align="center"}
  
[**Valeurs finales :**]{.blue}  
[NbRouges = 3]{.blue}  
[NbVerts = 4]{.blue}  
:::
:::

## Exercice 5

::: columns
::: {.column width="65%"}
**Ecrire l’algorithme Parcours-5**  

**Finalités :**   
- Permettre à la flèche d’atteindre la sortie du labyrinthe  
- Connaître le nombre de points verts rencontrés sur le parcours  
- Connaître le mot constitué par les lettres rencontrées  
- Connaître l’état de la météo à la sortie du labyrinthe  
  
**Noms des variables choisis pour l’exercice : NbVerts, MonMot, BeauTemps**  

![](img/exercice5_cadre.png){.inlineimage} Signale un changement de météo (beau temps / mauvais temps)  

Temps initial : beau temps
:::

::: {.column width="35%"}
![](img/exercice5.png)  
  
[**Valeurs finales :**]{.blue}  
[NbRouges = 3]{.blue}  
[NbVerts = 4]{.blue}  
:::
:::

## Exercice 5 - correction


![](img/exercice5_correction.png){fig-align="center"}


## Exercice 6

**Eligibilité des exploitations à la PAC**  

En 2023, de façon très simplifiée, des primes PAC sont attribuées à un exploitant qui cumule les conditions :  
  
- Être un agriculteur actif (ne pas avoir fait valoir ses droits à la retraite)  
- Respecter au moins une des 3 voies d’accès à un écorégime ou avoir une exploitation ayant une superficie de moins de 10ha (surface agricole utile)  
- Disposer de 4% minimum des terres arables dédié à des infrastructures agro-écologiques ou jachères  

![](img/exercice6.png){fig-align="center"}  
  
**Ces exploitants sont-ils éligibles à des primes PAC ?**  

## Exercice 6 - correction

![](img/exercice6_corrige.png){fig-align="center"}  

## Exercice 7

**Ecrire l’algorithme « TransfoCodeMois »**  

**Finalités :**   
- Demander la saisie d’un chiffre entre 3 et 6 à un utilisateur  
- Récupérer la valeur saisie par l’utilisateur   
- Afficher le libellé du mois correspondant au nombre saisi  

**Instructions disponibles :**  
- Afficher (= écrire à l’écran)  
- MettreEnMemoire <NomVariable> (= récupérer la valeur saisie par l’utilisateur et initialiser la valeur de <NomVariable>)  

**Nom de la variable choisi pour l’exercice : CodeMois**  
  
Il n’est pas nécessaire de prévoir le cas où l’utilisateur saisirait une valeur qui ne serait pas un entier (caractère, nombre décimal, pas de valeur …) .


## Exercice 7 - correction

<br>

**ALGORITHME** AfficheLibelleMois  

**VARIABLES**  
    CodeMois : ENTIER
		
**DEBUT**   
    Afficher « Saisissez un chiffre compris entre 3 et 6 »  
    MettreEnMemoire CodeMois  

    SELON CodeMois FAIRE  
        CAS 3 : Afficher « Mars »  
        CAS 4 : Afficher « Avril »  
        CAS 5 : Afficher « Mai »  
        CAS 6 : Afficher « Juin »  
        AUTREMENT : Afficher « Consigne non respectée »  
    FIN SELON  
**FIN**


## Exercice 8

**Ecrire l’algorithme « AfficheLibelleSaison »**  

**Finalités :**   
- Demander la saisie d’un nombre entre 1 et 12 à un utilisateur  
- Récupérer la valeur saisie par l’utilisateur  
- Afficher le libellé de la saison correspondant au nombre saisi  

**Instructions disponibles :**    
- Afficher (= écrire à l’écran)  
- MettreEnMemoire <NomVariable> (= récupérer la valeur saisie par l’utilisateur et initialiser la valeur de <NomVariable>)  

**Nom de la variable choisi pour l’exercice : CodeMois**  

Il n’est pas nécessaire de prévoir le cas où l’utilisateur saisirait une valeur qui ne serait pas un entier (caractère, nombre décimal, pas de valeur …) .

## Exercice 8 - correction

![](img/exercice8_corrige.png){fig-align="center"}  

## Exercice 9 - objectif

**Finalité :**   
- Construire ce tableau à partir des données mises à disposition  

![](img/exercice9.png){fig-align="center"}  
Ce tableau contient la superficie en hectares ensemencée pour chaque saison dans les régions Bretagne, Centre Val de Loire et Occitanie. Les régions et les saisons sont classées par ordre alphabétique. Les semis pouvant être réalisés à n’importe quel moment de l’année sont exclus.


## Exercice 9 - données à disposition

![](img/exercice9_mise_a_disposition.png){fig-align="center"}  

## Exercice 9 - analyser les données

**Etape 1 : observation des données**  

**Analyser la structure et les valeurs des données manipulées :**  
- Dans les données source (données à disposition)  
- Dans les données résultat  

Ce tableau contient …  

**Pour chaque tableau de données source :**  
- définir l’utilité des données pour la constitution du tableau de résultat    
- définir l’utilité de chaque colonne pour la constitution du tableau de résultat  
- si des filtres sur les valeurs sont nécessaires, définir les critères de sélection   
  
**Répertorier les liens entre les données source nécessaires à la constitution du tableau résultat**   

Les valeurs de la colonne … du tableau … correspondent aux valeurs de la colonne … du tableau …


## Exercice 9 - préparer les données unitaires (1/2)

**Etape 2 : préparation des données unitaires utiles à la construction du résultat**  

A partir du tableau des données ASSOLEMENT :  
- Restreindre les données aux colonnes utiles pour le résultat  
    => Sélection de colonnes/variables  

- Ajouter les données manquantes à partir des autres tableaux  
    => Appariement / Enrichissement par jointure avec présence d’ une clé commune  

- Supprimer les données non pertinentes pour le résultat   
    => Sélection de colonnes/variables  
    => Filtre sur les données  


## Exercice 9 - préparer les données unitaires (2/2)

::: columns
::: {.column width="50%"}
Les jointures à partir du code département entraînent l’ajout des données des régions (anciennes et nouvelles). Les données liées à l’ancienne organisation administrative ont été supprimées.
:::

::: {.column width="50%"}
![](img/exercice9_prepa.png){fig-align="center"}  
:::
:::

## Exercice 9 - préparation des données unitaires (1/7)

![](img/exercice9_prepar_donnees_unitaires.png){fig-align="center"}  

## Exercice 9 - préparation des données unitaires (2/7)

![](img/exercice9_prepar_donnees_unitaires_2.png){fig-align="center"} 

## Exercice 9 - préparation des données unitaires (3/7)

![](img/exercice9_prepar_donnees_unitaires_3.png){fig-align="center"}  

## Exercice 9 - préparation des données unitaires (4/7)

![](img/exercice9_prepar_donnees_unitaires_4.png){fig-align="center"}  


## Exercice 9 - préparation des données unitaires (5/7)

![](img/exercice9_prepar_donnees_unitaires_5.png){fig-align="center"}  

## Exercice 9 - préparation des données unitaires (6/7)

![](img/exercice9_prepar_donnees_unitaires_6.png){fig-align="center"}  

## Exercice 9 - préparation des données unitaires (7/7)

![](img/exercice9_prepar_donnees_unitaires_7.png){fig-align="center"}  


## Exercice 9 - agrégation des données (1/2)

**Etape 3 :** agréger les données  

- Choisir les colonnes de regroupement pour les calculs  
    => **Sélection des colonnes/variables de regroupement**  

- Effectuer le calcul nécessaire pour le résultat (cumul des surfaces)  
    => **Agrégation des données (somme)**


![](img/exercice9_agreg.png){fig-align="center"}  

Ce tableau contient les cumuls de surface par région (nouvelle organisation administrative) et saison de semis pour toutes les parcelles référencées dans le tableau « Assolement ».   
=> Aucune restriction n’a été faite par région ou saison de semis.  
=> Aucun classement des données par ordre alphabétique n’a été fait.  
=> Tous les croisements région/saison de semis attendus dans le tableau des résultats ne sont pas référencés  

## Exercice 9 - agrégation des données (2/2)

![](img/exercice9_agreg_2.png){fig-align="center"} 

## Exercice 9 - préparation du tableau de résultat

::: columns
::: {.column width="70%"}
**Etape 4 :** préparer les croisements attendus pour le tableau résultat  

- Sélection des libellés de région attendus à partir des données « REGION »  
    - [Filtre sur les données]{.small}  
    - [Sélection des colonnes/variables]{.small}  
    - [Renommage de colonne]{.small}  
    - [Tri des données]{.small}  

- Sélection des saisons de semis attendues à partir des données « CULTURE »  
    - [Sélection des colonnes/variables]{.small}  
    - [Suppression des doublons]{.small}  
    - [Filtre et tri sur les données]{.small}  

- Génération de toutes les combinaisons possibles par produit cartésien  
    - [Appariement / Enrichissement par jointure avec absence de clé]{.small}  

:::

::: {.column width="30%"}
![](img/exercice9_prepa_tableau.png){fig-align="center"}  
  
[3 valeurs différentes pour les libellés de régions]{.tiny}  
[4 valeurs différentes pour les saisons de semis]{.tiny}  
[=> 12 croisements possibles (3*4)]{.tiny} 
:::
:::

## Exercice 9 - finalisation du tabeau de résultat

**Etape 5 :** remplissage du tableau des résultats   

- Enrichir le tableau des croisements région/saison de semis avec le cumul des surfaces calculé à partir des données « Assolement »  
    => **Appariement / Enrichissement par jointure avec présence d’une clé commune**  

- Remplacement des valeurs manquantes par des 0 pour les cumuls de surface  
    => **Modification des valeurs d’une variable**

![](img/exercice9_final.png){fig-align="center"}

## Exercice 10 - Objectif

**Finalité :**   
- Construire ce tableau à partir du tableau résultat de l’exercice précédent  

![](img/exercice10.png){fig-align="center"}  
  
Ce tableau contient les mêmes informations que le tableau de l’exercice précédent mais les saisons de semis sont présentées en colonnes. 


## Exercice 10 - Corrigé


Passer les modalités de la variable « SAISON_SEMIS » en colonnes et affecter à ces colonnes les valeurs de la variable « CUMUL_SURFACE »  
  
**Transposer une table**


